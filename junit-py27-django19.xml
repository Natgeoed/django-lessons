<?xml version="1.0" encoding="utf-8"?><testsuite errors="1" failures="0" name="pytest" skips="0" tests="1" time="1.657"><testcase classname="curricula.tests.test_tests.BaseTestCase" file="curricula/tests/test_tests.py" line="5" name="test_tests" time="0.871886968613"><error message="test setup failure">request = &lt;SubRequest &apos;_django_setup_unittest&apos; for &lt;TestCaseFunction &apos;test_tests&apos;&gt;&gt;, django_db_blocker = &lt;pytest_django.plugin._DatabaseBlocker object at 0x109add250&gt;

    @pytest.fixture(autouse=True, scope=&apos;class&apos;)
    def _django_setup_unittest(request, django_db_blocker):
        &quot;&quot;&quot;Setup a django unittest, internal to pytest-django.&quot;&quot;&quot;
        if django_settings_is_configured() and is_django_unittest(request):
            getfixturevalue(request, &apos;django_test_environment&apos;)
&gt;           getfixturevalue(request, &apos;django_db_setup&apos;)

.tox/py27-django19/lib/python2.7/site-packages/pytest_django/plugin.py:384: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/py27-django19/lib/python2.7/site-packages/pytest_django/pytest_compat.py:3: in getfixturevalue
    return request.getfixturevalue(value)
.tox/py27-django19/lib/python2.7/site-packages/pytest_django/fixtures.py:97: in django_db_setup
    **setup_databases_args
.tox/py27-django19/lib/python2.7/site-packages/django/test/runner.py:726: in setup_databases
    serialize=connection.settings_dict.get(&quot;TEST&quot;, {}).get(&quot;SERIALIZE&quot;, True),
.tox/py27-django19/lib/python2.7/site-packages/django/db/backends/base/creation.py:70: in create_test_db
    run_syncdb=True,
.tox/py27-django19/lib/python2.7/site-packages/django/core/management/__init__.py:119: in call_command
    return command.execute(*args, **defaults)
.tox/py27-django19/lib/python2.7/site-packages/django/core/management/base.py:399: in execute
    output = self.handle(*args, **options)
.tox/py27-django19/lib/python2.7/site-packages/django/core/management/commands/migrate.py:172: in handle
    self.sync_apps(connection, executor.loader.unmigrated_apps)
.tox/py27-django19/lib/python2.7/site-packages/django/core/management/commands/migrate.py:293: in sync_apps
    cursor.execute(statement)
.tox/py27-django19/lib/python2.7/site-packages/django/db/backends/utils.py:62: in execute
    return self.cursor.execute(sql)
.tox/py27-django19/lib/python2.7/site-packages/django/db/utils.py:95: in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;django.db.backends.utils.CursorWrapper object at 0x10d1e4e50&gt;
sql = &apos;ALTER TABLE &quot;audience_externalresourcevariation&quot; ADD CONSTRAINT &quot;D4127db0078a867ebf896c7a6f23411c&quot; FOREIGN KEY (&quot;variation_model_id&quot;) REFERENCES &quot;resource_carousel_externalresource&quot; (&quot;id&quot;) DEFERRABLE INITIALLY DEFERRED&apos;
params = None

    def execute(self, sql, params=None):
        self.db.validate_no_broken_transaction()
        with self.db.wrap_database_errors:
            if params is None:
&gt;               return self.cursor.execute(sql)
E               ProgrammingError: relation &quot;resource_carousel_externalresource&quot; does not exist

.tox/py27-django19/lib/python2.7/site-packages/django/db/backends/utils.py:62: ProgrammingError</error><system-err>Got an error creating the test database: database &quot;test_curricula&quot; already exists

</system-err></testcase></testsuite>